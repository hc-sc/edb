<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:aug="http://www.ecb.jrc.it/ecb-net/augmenting" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:i5="http://echa.europa.eu/schemas/iuclid5/20120101" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext aug clitype fn i5 iso4217 ix java link sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="4.0" method="html" indent="no" encoding="UTF-8" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Enterprise Edition 2013 rel. 2 sp2 (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=9"/>
				<style type="text/css">
					<xsl:comment>@import  url("file:///C:/Users/krautmac/Documents/IMandA/eSEG/eSEG%20Praesentation/ECHA_skin-1.2.0.css");</xsl:comment>
				</style>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.60in; margin-right:0.60in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<xsl:variable name="Category" select="i5:EndpointStudyRecord/i5:scientificPart/node()"/>
					<h2>
						<xsl:for-each select="i5:EndpointStudyRecord">
							<xsl:for-each select="i5:name">
								<xsl:apply-templates/>
							</xsl:for-each>
						</xsl:for-each>
					</h2>
					<h5>
						<span>
							<xsl:text>Report:</xsl:text>
						</span>
					</h5>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:REFERENCE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:REFERENCE_AUTHOR">
											<xsl:for-each select="i5:REFERENCE_AUTHOR">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:REFERENCE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:REFERENCE_YEAR">
											<xsl:for-each select="i5:REFERENCE_YEAR">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<span>
						<xsl:text>, </xsl:text>
					</span>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:REFERENCE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:REFERENCE_TITLE">
											<xsl:for-each select="i5:REFERENCE_TITLE">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<br/>
					<span>
						<xsl:text>Testlab: </xsl:text>
					</span>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:REFERENCE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:REFERENCE_TESTLAB">
											<xsl:for-each select="i5:REFERENCE_TESTLAB">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<br/>
					<span>
						<xsl:text>Report No.: </xsl:text>
					</span>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:REFERENCE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:REFERENCE_REPORT_NO">
											<xsl:for-each select="i5:REFERENCE_REPORT_NO">
												<xsl:apply-templates/>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<br/>
					<h5>
						<span style="font-weight:bold; ">
							<xsl:text>Guidelines:</xsl:text>
						</span>
					</h5>
					<xsl:for-each select="i5:EndpointStudyRecord">
						<xsl:for-each select="i5:scientificPart">
							<xsl:for-each select="$Category">
								<xsl:for-each select="i5:GUIDELINE">
									<xsl:for-each select="i5:set">
										<xsl:for-each select="i5:PHRASEOTHER_GUIDELINE">
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:GUIDELINE.value"/>
											</xsl:call-template>
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:GUIDELINE_TXT"/>
											</xsl:call-template>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:GLP_COMPLIANCE_STATEMENT/i5:set/i5:PHRASEOTHER_LIST_SEL_FIX/i5:LIST_SEL_FIX.value/node() or i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:GLP_COMPLIANCE_STATEMENT/i5:set/i5:PHRASEOTHER_LIST_SEL_FIX/i5:LIST_SEL_FIX_TXT/node()">
						<br/>
						<h5>
							<span style="font-weight:bold; ">
								<xsl:text>GLP:</xsl:text>
							</span>
							<span>
								<xsl:text>&#160;</xsl:text>
							</span>
						</h5>
						<xsl:for-each select="i5:EndpointStudyRecord">
							<xsl:for-each select="i5:scientificPart">
								<xsl:for-each select="$Category">
									<xsl:for-each select="i5:GLP_COMPLIANCE_STATEMENT">
										<xsl:for-each select="i5:set">
											<xsl:for-each select="i5:PHRASEOTHER_LIST_SEL_FIX">
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_SEL_FIX.value"/>
												</xsl:call-template>
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_SEL_FIX_TXT"/>
												</xsl:call-template>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
						<span>
							<xsl:text>&#160;</xsl:text>
						</span>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:APPL_EXEC_SUM/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW/node()">
						<br/>
						<br/>
						<h5>
							<span style="font-weight:bold; ">
								<xsl:text>Executive Summary:</xsl:text>
							</span>
						</h5>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:APPL_EXEC_SUM/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW"/>
						</xsl:call-template>
					</xsl:if>
					<br/>
					<br/>
					<h3>
						<span>
							<xsl:text>A. Materials and Methods</xsl:text>
						</span>
					</h3>
					<h4>
						<span>
							<xsl:text>Materials</xsl:text>
						</span>
					</h4>
					<table border="0">
						<xsl:variable name="altova:CurrContextGrid_0" select="."/>
						<thead>
							<tr>
								<th style="text-align:left; width:1.32in; ">
									<h5>
										<span>
											<xsl:text>Test material</xsl:text>
										</span>
									</h5>
								</th>
								<th style="width:6.50in; "/>
							</tr>
						</thead>
						<tbody>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:TESTMAT_FORM/i5:set/i5:PHRASEOTHER_TESTMAT_FORM/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Physical form:</xsl:text>
											</span>
										</th>
										<td style="width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:TESTMAT_FORM">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:PHRASEOTHER_TESTMAT_FORM">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:TESTMAT_FORM.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:TESTMAT_FORM_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:TESTMAT_DETAILS/i5:set/i5:FREETEXT_BELOW/node() or i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:TESTMAT_CONFIDENTIAL_DETAILS/i5:set/i5:FREETEXT_BELOW/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Description:</xsl:text>
											</span>
										</th>
										<td style="width:6.50in; ">
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:TESTMAT_DETAILS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW"/>
											</xsl:call-template>
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:TESTMAT_CONFIDENTIAL_DETAILS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW"/>
											</xsl:call-template>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:for-each select="i5:EndpointStudyRecord">
								<xsl:for-each select="i5:scientificPart">
									<xsl:for-each select="$Category">
										<xsl:for-each select="i5:TESTMAT">
											<xsl:for-each select="i5:set">
												<tr>
													<th style="text-align:left; width:1.32in; ">
														<xsl:for-each select="i5:PHRASEOTHER_IDENTIFIER">
															<xsl:for-each select="i5:IDENTIFIER.value">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
														<span>
															<xsl:text>: </xsl:text>
														</span>
													</th>
													<td style="width:6.50in; ">
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="i5:ID">
															<xsl:for-each select="i5:ID">
																<xsl:apply-templates/>
															</xsl:for-each>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<tr>
								<th style="text-align:left; width:1.32in; ">
									<h5>
										<span>
											<xsl:text>Administration/exposure</xsl:text>
										</span>
									</h5>
								</th>
								<td style="width:6.50in; "/>
							</tr>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ROUTE/i5:set/i5:PHRASEOTHER_LIST_POP/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Route of administration:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:ROUTE">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:PHRASEOTHER_LIST_POP">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:VEHICLE_TOX/i5:set/i5:PHRASEOTHER_LIST_POP_FIX/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Vehicle:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:VEHICLE_TOX">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:PHRASEOTHER_LIST_POP_FIX">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP_FIX.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP_FIX_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ORAL_EXP_DETAILS/i5:set/i5:FREETEXT_BELOW/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Details on oral exposure:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ORAL_EXP_DETAILS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW"/>
											</xsl:call-template>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<tr>
								<th style="text-align:left; width:1.32in; ">
									<h5>
										<span>
											<xsl:text>Test animals</xsl:text>
										</span>
									</h5>
								</th>
								<td style="text-align:left; width:6.50in; "/>
							</tr>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ORGANISM/i5:set/i5:PHRASEOTHER_LIST_POP/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Species:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:ORGANISM">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:PHRASEOTHER_LIST_POP">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:STRAIN/i5:set/i5:PHRASEOTHER_LIST_POP/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Strain:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:STRAIN">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:PHRASEOTHER_LIST_POP">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_POP_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:SEX/i5:set/i5:LIST_BELOW_POP/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Sex:</xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:for-each select="i5:EndpointStudyRecord">
												<xsl:for-each select="i5:scientificPart">
													<xsl:for-each select="$Category">
														<xsl:for-each select="i5:SEX">
															<xsl:for-each select="i5:set">
																<xsl:for-each select="i5:LIST_BELOW_POP">
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_BELOW_POP.value"/>
																	</xsl:call-template>
																	<xsl:call-template name="fill_text">
																		<xsl:with-param name="content" select="i5:LIST_BELOW_POP_TXT"/>
																	</xsl:call-template>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ORGANISM_DETAILS/i5:set/i5:FREETEXT_BELOW/node()">
									<tr>
										<th style="text-align:left; width:1.32in; ">
											<span>
												<xsl:text>Details on test animals and environmental conditions: </xsl:text>
											</span>
										</th>
										<td style="text-align:left; width:6.50in; ">
											<xsl:call-template name="fill_text">
												<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:ORGANISM_DETAILS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW"/>
											</xsl:call-template>
										</td>
									</tr>
								</xsl:when>
								<xsl:otherwise/>
							</xsl:choose>
						</tbody>
					</table>
					<h4>
						<span>
							<xsl:text>Study Design and Methods</xsl:text>
						</span>
					</h4>
					<h5>
						<span style="font-weight:bold; ">
							<xsl:text>Animal assignment and treatment</xsl:text>
						</span>
					</h5>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:DOSES_CONCENTRATIONS/i5:set/i5:TEXT_BELOW/i5:TEXT_BELOW/node()">
						<br/>
						<span>
							<xsl:text>Doses: </xsl:text>
						</span>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:DOSES_CONCENTRATIONS/i5:set/i5:TEXT_BELOW/i5:TEXT_BELOW"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:NUMBER_ANIMALS/i5:set/i5:TEXT_BELOW/i5:TEXT_BELOW/node()">
						<br/>
						<span>
							<xsl:text>Number of animals: </xsl:text>
						</span>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:NUMBER_ANIMALS/i5:set/i5:TEXT_BELOW/i5:TEXT_BELOW"/>
						</xsl:call-template>
					</xsl:if>
					<br/>
					<xsl:call-template name="fill_text">
						<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:STUDY_DESIGN_DETAILS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW)"/>
					</xsl:call-template>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:STATISTICS/i5:set/i5:TEXT_INT/i5:TEXT_INT/node()">
						<br/>
						<h5>
							<span style="font-weight:bold; ">
								<xsl:text>Statistics</xsl:text>
							</span>
						</h5>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:STATISTICS/i5:set/i5:TEXT_INT/i5:TEXT_INT"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_ME_TC/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW/node()">
						<br/>
						<h5>
							<span style="font-weight:bold; ">
								<xsl:text>Others</xsl:text>
							</span>
						</h5>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_ME_TC/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW"/>
						</xsl:call-template>
					</xsl:if>
					<br/>
					<h3>
						<span>
							<xsl:text>B. Results and Discussion</xsl:text>
						</span>
					</h3>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:EFFLEVEL/i5:set/i5:SEX/i5:SEX.value/node()">
						<h4>
							<span>
								<xsl:text>Effect levels</xsl:text>
							</span>
						</h4>
						<table border="1">
							<xsl:variable name="altova:CurrContextGrid_1" select="."/>
							<thead>
								<tr>
									<th style="text-align:left; ">
										<span>
											<xsl:text>Sex</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>Endpoint</xsl:text>
										</span>
									</th>
									<th>
										<span>
											<xsl:text>Effect level</xsl:text>
										</span>
									</th>
								</tr>
							</thead>
							<tbody>
								<xsl:for-each select="i5:EndpointStudyRecord">
									<xsl:for-each select="i5:scientificPart">
										<xsl:for-each select="$Category">
											<xsl:for-each select="i5:EFFLEVEL">
												<xsl:for-each select="i5:set">
													<tr>
														<td>
															<xsl:for-each select="i5:SEX">
																<xsl:for-each select="i5:SEX.value">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
														</td>
														<td>
															<xsl:for-each select="i5:PHRASEOTHER_ENDPOINT">
																<xsl:for-each select="i5:ENDPOINT.value">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
														</td>
														<td>
															<xsl:for-each select="i5:PRECISION_LOQUALIFIER">
																<xsl:for-each select="i5:LOQUALIFIER.value">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<xsl:for-each select="i5:PRECISION_LOQUALIFIER">
																<xsl:for-each select="i5:LOVALUE">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="i5:PRECISION_LOQUALIFIER">
																<xsl:for-each select="i5:UPQUALIFIER.value">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="i5:PRECISION_LOQUALIFIER">
																<xsl:for-each select="i5:UPVALUE">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<xsl:for-each select="i5:PRECISION_LOQUALIFIER">
																<xsl:for-each select="i5:UNIT.value">
																	<xsl:apply-templates/>
																</xsl:for-each>
															</xsl:for-each>
														</td>
													</tr>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_MORTALITY/i5:set/i5:TEXT_INT/i5:TEXT_INT/node()">
						<h4>
							<span>
								<xsl:text>Mortality</xsl:text>
							</span>
						</h4>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_MORTALITY/i5:set/i5:TEXT_INT/i5:TEXT_INT)"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_CLIN_SIGNS/i5:set/i5:TEXT_INT/i5:TEXT_INT/node()">
						<h4>
							<span>
								<xsl:text>Clinical Observations</xsl:text>
							</span>
						</h4>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_CLIN_SIGNS/i5:set/i5:TEXT_INT/i5:TEXT_INT)"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_BODYWEIGHT/i5:set/i5:TEXT_INT/i5:TEXT_INT/node()">
						<h4>
							<span>
								<xsl:text>Body Weight</xsl:text>
							</span>
						</h4>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_BODYWEIGHT/i5:set/i5:TEXT_INT/i5:TEXT_INT)"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_GRPATHOL/i5:set/i5:TEXT_INT/i5:TEXT_INT/node()">
						<h4>
							<span>
								<xsl:text>Necropsy</xsl:text>
							</span>
						</h4>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_GRPATHOL/i5:set/i5:TEXT_INT/i5:TEXT_INT)"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_OTHER_FINDINGS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW/node() or i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_RS/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW/node()">
						<h4>
							<span>
								<xsl:text>Other findings</xsl:text>
							</span>
						</h4>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:OBSERV_OTHER_FINDINGS/i5:set/i5:FREETEXT_BELOW/i5:FREETEXT_BELOW)"/>
						</xsl:call-template>
						<br/>
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_RS/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW)"/>
						</xsl:call-template>
					</xsl:if>
					<br/>
					<h3>
						<span>
							<xsl:text>C. Conclusions</xsl:text>
						</span>
					</h3>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_ANYOTHER/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW/node()">
						<xsl:call-template name="fill_text">
							<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:REM_ANYOTHER/i5:set/i5:RICHTEXT_BELOW/i5:RICHTEXT_BELOW)"/>
						</xsl:call-template>
					</xsl:if>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:INTERPRET_RS_SUBMITTER/i5:set/i5:PHRASEOTHER_LIST_POP_FIX/i5:LIST_POP_FIX.value/node() or i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:INTERPRET_RS_SUBMITTER/i5:set/i5:PHRASEOTHER_LIST_POP_FIX/i5:LIST_POP_FIX_TXT/node()">
						<br/>
						<xsl:for-each select="i5:EndpointStudyRecord">
							<xsl:for-each select="i5:scientificPart">
								<xsl:for-each select="$Category">
									<xsl:for-each select="i5:INTERPRET_RS_SUBMITTER">
										<xsl:for-each select="i5:set">
											<xsl:for-each select="i5:PHRASEOTHER_LIST_POP_FIX">
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_POP_FIX.value"/>
												</xsl:call-template>
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_POP_FIX_TXT"/>
												</xsl:call-template>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:if>
					<span>
						<xsl:text>&#160;</xsl:text>
					</span>
					<xsl:if test="i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:CRITERIA_SUBMITTER/i5:set/i5:PHRASEOTHER_LIST_POP/i5:LIST_POP.value/node() or i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:CRITERIA_SUBMITTER/i5:set/i5:PHRASEOTHER_LIST_POP/i5:LIST_POP_TXT/node()">
						<span>
							<xsl:text>(Criteria used for interpretation of results: </xsl:text>
						</span>
						<xsl:for-each select="i5:EndpointStudyRecord">
							<xsl:for-each select="i5:scientificPart">
								<xsl:for-each select="$Category">
									<xsl:for-each select="i5:CRITERIA_SUBMITTER">
										<xsl:for-each select="i5:set">
											<xsl:for-each select="i5:PHRASEOTHER_LIST_POP">
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_POP.value"/>
												</xsl:call-template>
												<xsl:call-template name="fill_text">
													<xsl:with-param name="content" select="i5:LIST_POP_TXT"/>
												</xsl:call-template>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
						<span>
							<xsl:text>)</xsl:text>
						</span>
					</xsl:if>
					<br/>
					<xsl:call-template name="fill_text">
						<xsl:with-param name="content" select="(i5:EndpointStudyRecord/i5:scientificPart/child::*/i5:APPL_CL/i5:set/i5:TEXTAREA_BELOW/i5:TEXTAREA_BELOW)"/>
					</xsl:call-template>
				</xsl:for-each>
				<br/>
				<br/>
			</body>
		</html>
	</xsl:template>
	<xsl:template name="fill_text">
		<xsl:param name="content" select="&apos;&apos;"/>
		<xsl:choose>
			<xsl:when test="contains(translate(name($content), &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;, &quot;abcdefghijklmnopqrstuvwxyz&quot;), &apos;text&apos;)">
				<xsl:choose>
					<xsl:when test="contains($content, &apos;&lt;body&gt;&apos;)">
						<xsl:choose>
							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
								<span>
									<xsl:value-of select="$content"/>
								</span>
							</xsl:when>
							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
								<span>
									<xsl:value-of select="$content" disable-output-escaping="yes"/>
								</span>
							</xsl:when>
							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
								<span>
									<xsl:value-of select="$content" disable-output-escaping="yes"/>
								</span>
							</xsl:when>
							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
								<xsl:call-template name="convert_html">
									<xsl:with-param name="html" select="$content"/>
								</xsl:call-template>
							</xsl:when>
							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
								<xsl:call-template name="convert_html">
									<xsl:with-param name="html" select="$content"/>
								</xsl:call-template>
							</xsl:when>
						</xsl:choose>
					</xsl:when>
					<xsl:otherwise>
						<pre style="word-wrap:break-word; white-space: -moz-pre-wrap; ">
							<span>
								<xsl:value-of select="$content"/>
							</span>
						</pre>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<span>
					<xsl:value-of select="$content"/>
				</span>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="convert_html">
		<xsl:param name="html" select="&apos;&apos;"/>
	</xsl:template>
</xsl:stylesheet>
