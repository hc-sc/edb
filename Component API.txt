Component API

Icon  - an icon
Bindings:
	icon (object) - the object containing the info for the icon. To have functionality, use ng-click or ui-sref
		label (string) - the aria-label
		name (string) - the name of the icon to display (see config/app.icons)
		color (string) - [light, dark], applies the color of the icon

	NOTE: in the future, will attach these properties directly, so we don't have to have objects in the controller everywhere

Navbar - a tab panel
Bindings:
	items (array of objects) - the items to show up in the tabs
		state (string) - the route you want to go to
		title (string) - the title of the tab


Select-Input - a selectable dropdown (may need enhancement for nested structures)
Bindings:
	label (string) - aria-label and placeholder
	isRequired (string of true/false) - required
	showValue (string of true/false) - whether to display the 'value' property (i.e. for picklists)
	selectValue (object) - the currently selected value
	values (array of objects) - the items to display in the dropdown
	main (string) - the property you want to display
	onUpdate - the update function for the property


Select-Input-Extensible - selectable and extendible component for picklists
Bindings:
	label (string) - aria-label and placeholder
	isRequired (boolean) - same as select-input
	showValue (boolean) - same as select-input
	selectValue (object) - same as select-input
	values (array) - same as select-input
	typeName (string) - the constant used for picklist items
	onUpdate - same as select-input
	onAdd - use the base controllers 'createPicklistItem' function, with appropriate arguments


Sidenav - the sidenav
Bindings:
	items (array of objects) - the items to show in the sidenav
	selected (object) - the currently selected items
	main (string) - the value you want to show up in the sidenav
	isOpen (object) - use '$ctrl.sidenavOpen'
	onSelect - function that selects the item you want to be selected
	onAdd - adds a new item to the sidenav


Spinner - used to indicate progress. Users expect to be notified that something happened within 100ms, use a spinner to indicate things are loading


Tbl - wrapper for a table that include searching, sort, add, delete, and edit. 	It works by creating new items from ITEMS that match the properties defined in PROJECTION
Bindings:
	title (string) - the text you want to be shown at the top of the table
	items (array of objects) - the list of items
	minItems (int) - if items isn't of length minItems, will display error
	defaultSort (string) - the property on ITEMS to initialize the table sort with
	defaultReverse (boolean) - whether the sort should default to descending
	projection (array of strings) - the properties in ITEMS objects you want displayed
	deletable (boolean) - whether or not ITEMS can be deleted (display delete column or not)
	onSelect - function for onSelect (base.controller uses selectTblItem)
	onAdd - function for adding new item (base.controller uses addTblItem)
	onDelete - function for deleting item (base.controller uses deleteTblItem)

	NOTES: This is a complex component, you may have to overwrite some of the functions to suite your needs
	In future, thinking about adding 'editable' and 'viewable', similar to 'deletable'

	ISSUES: Currently works using setTimeout, which it shouldn't. Consider looking into emitters or other lifecycle methods to signal when update is complete


Text-Input - basic text field with error notifications.
Bindings:
	label (string) - aria-label and title
	textValue (object) - the property you want displayed
	isRequired (boolean) - whether it will display an error if unfilled and asterix
	isDisabled (boolean) - whether the input is disbled
	maxLength (int) - the max number of characters before an error message appears
	hasPattern (regex) - the pattern the text must match or error is displayed
	message (string) - the message to appear when HASPATTERN is not met
	onUpdate - the function used to update the field


Toolbar - the coloured bar that contains nav items, title, and function icons. $rootScope.title should be set in the onEnter method in config/app.states
Bindings:
	items (object)
		navIcons (array of objects with ICON properties) - the icons to change state
		functionIcons (array of objects with ICON properties) - icons to perform functions (i.e. help, setting, validate, etc.)


Tree - A recursive component used to build tree structures
Bindings:
	node (object) - the root of the tree to build
	items (array) - the documents list, resolved once and passed down into components to speed up resolution

